//------------------------------------------------------------------------------
// <auto-generated>
//    Este código se generó a partir de una plantilla.
//
//    Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//    Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region Metadatos de relaciones en EDM

[assembly: EdmRelationshipAttribute("gisiabaseModel", "FK_alternativacomparacion_alternativa", "alternativa", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(sisexperto.alternativa), "comparacion_alternativa", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(sisexperto.comparacion_alternativa), true)]
[assembly: EdmRelationshipAttribute("gisiabaseModel", "FK_alternativacomparacion_alternativa1", "alternativa", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(sisexperto.alternativa), "comparacion_alternativa", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(sisexperto.comparacion_alternativa), true)]
[assembly: EdmRelationshipAttribute("gisiabaseModel", "FK_proyectoalternativa", "proyecto", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(sisexperto.proyecto), "alternativa", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(sisexperto.alternativa), true)]
[assembly: EdmRelationshipAttribute("gisiabaseModel", "FK_criteriocomparacion_alternativa", "criterio", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(sisexperto.criterio), "comparacion_alternativa", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(sisexperto.comparacion_alternativa), true)]
[assembly: EdmRelationshipAttribute("gisiabaseModel", "FK_expertocomparacion_alternativa", "experto", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(sisexperto.experto), "comparacion_alternativa", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(sisexperto.comparacion_alternativa), true)]
[assembly: EdmRelationshipAttribute("gisiabaseModel", "FK_proyectocomparacion_alternativa", "proyecto", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(sisexperto.proyecto), "comparacion_alternativa", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(sisexperto.comparacion_alternativa), true)]
[assembly: EdmRelationshipAttribute("gisiabaseModel", "FK_criteriocomparacion_criterio", "criterio", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(sisexperto.criterio), "comparacion_criterio", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(sisexperto.comparacion_criterio), true)]
[assembly: EdmRelationshipAttribute("gisiabaseModel", "FK_criteriocomparacion_criterio1", "criterio", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(sisexperto.criterio), "comparacion_criterio", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(sisexperto.comparacion_criterio), true)]
[assembly: EdmRelationshipAttribute("gisiabaseModel", "FK_expertocomparacion_criterio", "experto", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(sisexperto.experto), "comparacion_criterio", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(sisexperto.comparacion_criterio), true)]
[assembly: EdmRelationshipAttribute("gisiabaseModel", "FK_proyectocomparacion_criterio", "proyecto", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(sisexperto.proyecto), "comparacion_criterio", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(sisexperto.comparacion_criterio), true)]
[assembly: EdmRelationshipAttribute("gisiabaseModel", "FK_proyectocriterio", "proyecto", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(sisexperto.proyecto), "criterio", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(sisexperto.criterio), true)]
[assembly: EdmRelationshipAttribute("gisiabaseModel", "FK_expertoexperto_proyecto", "experto", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(sisexperto.experto), "experto_proyecto", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(sisexperto.experto_proyecto), true)]
[assembly: EdmRelationshipAttribute("gisiabaseModel", "FK_proyectoexperto_proyecto", "proyecto", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(sisexperto.proyecto), "experto_proyecto", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(sisexperto.experto_proyecto), true)]

#endregion

namespace sisexperto
{
    #region Contextos
    
    /// <summary>
    /// No hay documentación de metadatos disponible.
    /// </summary>
    public partial class gisiabaseEntities : ObjectContext
    {
        #region Constructores
    
        /// <summary>
        /// Inicializa un nuevo objeto gisiabaseEntities usando la cadena de conexión encontrada en la sección 'gisiabaseEntities' del archivo de configuración de la aplicación.
        /// </summary>
        public gisiabaseEntities() : base("name=gisiabaseEntities", "gisiabaseEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Inicializar un nuevo objeto gisiabaseEntities.
        /// </summary>
        public gisiabaseEntities(string connectionString) : base(connectionString, "gisiabaseEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Inicializar un nuevo objeto gisiabaseEntities.
        /// </summary>
        public gisiabaseEntities(EntityConnection connection) : base(connection, "gisiabaseEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Métodos parciales
    
        partial void OnContextCreated();
    
        #endregion
    
        #region Propiedades de ObjectSet
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        public ObjectSet<alternativa> alternativa
        {
            get
            {
                if ((_alternativa == null))
                {
                    _alternativa = base.CreateObjectSet<alternativa>("alternativa");
                }
                return _alternativa;
            }
        }
        private ObjectSet<alternativa> _alternativa;
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        public ObjectSet<comparacion_alternativa> comparacion_alternativa
        {
            get
            {
                if ((_comparacion_alternativa == null))
                {
                    _comparacion_alternativa = base.CreateObjectSet<comparacion_alternativa>("comparacion_alternativa");
                }
                return _comparacion_alternativa;
            }
        }
        private ObjectSet<comparacion_alternativa> _comparacion_alternativa;
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        public ObjectSet<comparacion_criterio> comparacion_criterio
        {
            get
            {
                if ((_comparacion_criterio == null))
                {
                    _comparacion_criterio = base.CreateObjectSet<comparacion_criterio>("comparacion_criterio");
                }
                return _comparacion_criterio;
            }
        }
        private ObjectSet<comparacion_criterio> _comparacion_criterio;
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        public ObjectSet<criterio> criterio
        {
            get
            {
                if ((_criterio == null))
                {
                    _criterio = base.CreateObjectSet<criterio>("criterio");
                }
                return _criterio;
            }
        }
        private ObjectSet<criterio> _criterio;
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        public ObjectSet<experto> experto
        {
            get
            {
                if ((_experto == null))
                {
                    _experto = base.CreateObjectSet<experto>("experto");
                }
                return _experto;
            }
        }
        private ObjectSet<experto> _experto;
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        public ObjectSet<experto_proyecto> experto_proyecto
        {
            get
            {
                if ((_experto_proyecto == null))
                {
                    _experto_proyecto = base.CreateObjectSet<experto_proyecto>("experto_proyecto");
                }
                return _experto_proyecto;
            }
        }
        private ObjectSet<experto_proyecto> _experto_proyecto;
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        public ObjectSet<proyecto> proyecto
        {
            get
            {
                if ((_proyecto == null))
                {
                    _proyecto = base.CreateObjectSet<proyecto>("proyecto");
                }
                return _proyecto;
            }
        }
        private ObjectSet<proyecto> _proyecto;

        #endregion
        #region Métodos AddTo
    
        /// <summary>
        /// Método desusado para agregar un nuevo objeto al EntitySet alternativa. Considere la posibilidad de usar el método .Add de la propiedad ObjectSet&lt;T&gt; asociada.
        /// </summary>
        public void AddToalternativa(alternativa alternativa)
        {
            base.AddObject("alternativa", alternativa);
        }
    
        /// <summary>
        /// Método desusado para agregar un nuevo objeto al EntitySet comparacion_alternativa. Considere la posibilidad de usar el método .Add de la propiedad ObjectSet&lt;T&gt; asociada.
        /// </summary>
        public void AddTocomparacion_alternativa(comparacion_alternativa comparacion_alternativa)
        {
            base.AddObject("comparacion_alternativa", comparacion_alternativa);
        }
    
        /// <summary>
        /// Método desusado para agregar un nuevo objeto al EntitySet comparacion_criterio. Considere la posibilidad de usar el método .Add de la propiedad ObjectSet&lt;T&gt; asociada.
        /// </summary>
        public void AddTocomparacion_criterio(comparacion_criterio comparacion_criterio)
        {
            base.AddObject("comparacion_criterio", comparacion_criterio);
        }
    
        /// <summary>
        /// Método desusado para agregar un nuevo objeto al EntitySet criterio. Considere la posibilidad de usar el método .Add de la propiedad ObjectSet&lt;T&gt; asociada.
        /// </summary>
        public void AddTocriterio(criterio criterio)
        {
            base.AddObject("criterio", criterio);
        }
    
        /// <summary>
        /// Método desusado para agregar un nuevo objeto al EntitySet experto. Considere la posibilidad de usar el método .Add de la propiedad ObjectSet&lt;T&gt; asociada.
        /// </summary>
        public void AddToexperto(experto experto)
        {
            base.AddObject("experto", experto);
        }
    
        /// <summary>
        /// Método desusado para agregar un nuevo objeto al EntitySet experto_proyecto. Considere la posibilidad de usar el método .Add de la propiedad ObjectSet&lt;T&gt; asociada.
        /// </summary>
        public void AddToexperto_proyecto(experto_proyecto experto_proyecto)
        {
            base.AddObject("experto_proyecto", experto_proyecto);
        }
    
        /// <summary>
        /// Método desusado para agregar un nuevo objeto al EntitySet proyecto. Considere la posibilidad de usar el método .Add de la propiedad ObjectSet&lt;T&gt; asociada.
        /// </summary>
        public void AddToproyecto(proyecto proyecto)
        {
            base.AddObject("proyecto", proyecto);
        }

        #endregion
    }
    

    #endregion
    
    #region Entidades
    
    /// <summary>
    /// No hay documentación de metadatos disponible.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="gisiabaseModel", Name="alternativa")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class alternativa : EntityObject
    {
        #region Método de generador
    
        /// <summary>
        /// Crear un nuevo objeto alternativa.
        /// </summary>
        /// <param name="id_alternativa">Valor inicial de la propiedad id_alternativa.</param>
        /// <param name="id_proyecto">Valor inicial de la propiedad id_proyecto.</param>
        /// <param name="nombre">Valor inicial de la propiedad nombre.</param>
        public static alternativa Createalternativa(global::System.Int32 id_alternativa, global::System.Int32 id_proyecto, global::System.String nombre)
        {
            alternativa alternativa = new alternativa();
            alternativa.id_alternativa = id_alternativa;
            alternativa.id_proyecto = id_proyecto;
            alternativa.nombre = nombre;
            return alternativa;
        }

        #endregion
        #region Propiedades primitivas
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id_alternativa
        {
            get
            {
                return _id_alternativa;
            }
            set
            {
                if (_id_alternativa != value)
                {
                    Onid_alternativaChanging(value);
                    ReportPropertyChanging("id_alternativa");
                    _id_alternativa = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id_alternativa");
                    Onid_alternativaChanged();
                }
            }
        }
        private global::System.Int32 _id_alternativa;
        partial void Onid_alternativaChanging(global::System.Int32 value);
        partial void Onid_alternativaChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id_proyecto
        {
            get
            {
                return _id_proyecto;
            }
            set
            {
                Onid_proyectoChanging(value);
                ReportPropertyChanging("id_proyecto");
                _id_proyecto = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("id_proyecto");
                Onid_proyectoChanged();
            }
        }
        private global::System.Int32 _id_proyecto;
        partial void Onid_proyectoChanging(global::System.Int32 value);
        partial void Onid_proyectoChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String nombre
        {
            get
            {
                return _nombre;
            }
            set
            {
                OnnombreChanging(value);
                ReportPropertyChanging("nombre");
                _nombre = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("nombre");
                OnnombreChanged();
            }
        }
        private global::System.String _nombre;
        partial void OnnombreChanging(global::System.String value);
        partial void OnnombreChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String descripcion
        {
            get
            {
                return _descripcion;
            }
            set
            {
                OndescripcionChanging(value);
                ReportPropertyChanging("descripcion");
                _descripcion = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("descripcion");
                OndescripcionChanged();
            }
        }
        private global::System.String _descripcion;
        partial void OndescripcionChanging(global::System.String value);
        partial void OndescripcionChanged();

        #endregion
    
        #region Propiedades de navegación
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("gisiabaseModel", "FK_alternativacomparacion_alternativa", "comparacion_alternativa")]
        public EntityCollection<comparacion_alternativa> comparacion_alternativa
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<comparacion_alternativa>("gisiabaseModel.FK_alternativacomparacion_alternativa", "comparacion_alternativa");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<comparacion_alternativa>("gisiabaseModel.FK_alternativacomparacion_alternativa", "comparacion_alternativa", value);
                }
            }
        }
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("gisiabaseModel", "FK_alternativacomparacion_alternativa1", "comparacion_alternativa")]
        public EntityCollection<comparacion_alternativa> comparacion_alternativa1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<comparacion_alternativa>("gisiabaseModel.FK_alternativacomparacion_alternativa1", "comparacion_alternativa");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<comparacion_alternativa>("gisiabaseModel.FK_alternativacomparacion_alternativa1", "comparacion_alternativa", value);
                }
            }
        }
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("gisiabaseModel", "FK_proyectoalternativa", "proyecto")]
        public proyecto proyecto
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<proyecto>("gisiabaseModel.FK_proyectoalternativa", "proyecto").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<proyecto>("gisiabaseModel.FK_proyectoalternativa", "proyecto").Value = value;
            }
        }
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<proyecto> proyectoReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<proyecto>("gisiabaseModel.FK_proyectoalternativa", "proyecto");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<proyecto>("gisiabaseModel.FK_proyectoalternativa", "proyecto", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No hay documentación de metadatos disponible.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="gisiabaseModel", Name="comparacion_alternativa")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class comparacion_alternativa : EntityObject
    {
        #region Método de generador
    
        /// <summary>
        /// Crear un nuevo objeto comparacion_alternativa.
        /// </summary>
        /// <param name="id_proyecto">Valor inicial de la propiedad id_proyecto.</param>
        /// <param name="id_experto">Valor inicial de la propiedad id_experto.</param>
        /// <param name="id_criterio">Valor inicial de la propiedad id_criterio.</param>
        /// <param name="id_alternativa1">Valor inicial de la propiedad id_alternativa1.</param>
        /// <param name="id_alternativa2">Valor inicial de la propiedad id_alternativa2.</param>
        public static comparacion_alternativa Createcomparacion_alternativa(global::System.Int32 id_proyecto, global::System.Int32 id_experto, global::System.Int32 id_criterio, global::System.Int32 id_alternativa1, global::System.Int32 id_alternativa2)
        {
            comparacion_alternativa comparacion_alternativa = new comparacion_alternativa();
            comparacion_alternativa.id_proyecto = id_proyecto;
            comparacion_alternativa.id_experto = id_experto;
            comparacion_alternativa.id_criterio = id_criterio;
            comparacion_alternativa.id_alternativa1 = id_alternativa1;
            comparacion_alternativa.id_alternativa2 = id_alternativa2;
            return comparacion_alternativa;
        }

        #endregion
        #region Propiedades primitivas
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id_proyecto
        {
            get
            {
                return _id_proyecto;
            }
            set
            {
                if (_id_proyecto != value)
                {
                    Onid_proyectoChanging(value);
                    ReportPropertyChanging("id_proyecto");
                    _id_proyecto = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id_proyecto");
                    Onid_proyectoChanged();
                }
            }
        }
        private global::System.Int32 _id_proyecto;
        partial void Onid_proyectoChanging(global::System.Int32 value);
        partial void Onid_proyectoChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id_experto
        {
            get
            {
                return _id_experto;
            }
            set
            {
                if (_id_experto != value)
                {
                    Onid_expertoChanging(value);
                    ReportPropertyChanging("id_experto");
                    _id_experto = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id_experto");
                    Onid_expertoChanged();
                }
            }
        }
        private global::System.Int32 _id_experto;
        partial void Onid_expertoChanging(global::System.Int32 value);
        partial void Onid_expertoChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id_criterio
        {
            get
            {
                return _id_criterio;
            }
            set
            {
                if (_id_criterio != value)
                {
                    Onid_criterioChanging(value);
                    ReportPropertyChanging("id_criterio");
                    _id_criterio = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id_criterio");
                    Onid_criterioChanged();
                }
            }
        }
        private global::System.Int32 _id_criterio;
        partial void Onid_criterioChanging(global::System.Int32 value);
        partial void Onid_criterioChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id_alternativa1
        {
            get
            {
                return _id_alternativa1;
            }
            set
            {
                if (_id_alternativa1 != value)
                {
                    Onid_alternativa1Changing(value);
                    ReportPropertyChanging("id_alternativa1");
                    _id_alternativa1 = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id_alternativa1");
                    Onid_alternativa1Changed();
                }
            }
        }
        private global::System.Int32 _id_alternativa1;
        partial void Onid_alternativa1Changing(global::System.Int32 value);
        partial void Onid_alternativa1Changed();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id_alternativa2
        {
            get
            {
                return _id_alternativa2;
            }
            set
            {
                if (_id_alternativa2 != value)
                {
                    Onid_alternativa2Changing(value);
                    ReportPropertyChanging("id_alternativa2");
                    _id_alternativa2 = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id_alternativa2");
                    Onid_alternativa2Changed();
                }
            }
        }
        private global::System.Int32 _id_alternativa2;
        partial void Onid_alternativa2Changing(global::System.Int32 value);
        partial void Onid_alternativa2Changed();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> valor
        {
            get
            {
                return _valor;
            }
            set
            {
                OnvalorChanging(value);
                ReportPropertyChanging("valor");
                _valor = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("valor");
                OnvalorChanged();
            }
        }
        private Nullable<global::System.Double> _valor;
        partial void OnvalorChanging(Nullable<global::System.Double> value);
        partial void OnvalorChanged();

        #endregion
    
        #region Propiedades de navegación
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("gisiabaseModel", "FK_alternativacomparacion_alternativa", "alternativa")]
        public alternativa alternativa
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<alternativa>("gisiabaseModel.FK_alternativacomparacion_alternativa", "alternativa").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<alternativa>("gisiabaseModel.FK_alternativacomparacion_alternativa", "alternativa").Value = value;
            }
        }
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<alternativa> alternativaReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<alternativa>("gisiabaseModel.FK_alternativacomparacion_alternativa", "alternativa");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<alternativa>("gisiabaseModel.FK_alternativacomparacion_alternativa", "alternativa", value);
                }
            }
        }
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("gisiabaseModel", "FK_alternativacomparacion_alternativa1", "alternativa")]
        public alternativa alternativa1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<alternativa>("gisiabaseModel.FK_alternativacomparacion_alternativa1", "alternativa").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<alternativa>("gisiabaseModel.FK_alternativacomparacion_alternativa1", "alternativa").Value = value;
            }
        }
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<alternativa> alternativa1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<alternativa>("gisiabaseModel.FK_alternativacomparacion_alternativa1", "alternativa");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<alternativa>("gisiabaseModel.FK_alternativacomparacion_alternativa1", "alternativa", value);
                }
            }
        }
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("gisiabaseModel", "FK_criteriocomparacion_alternativa", "criterio")]
        public criterio criterio
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<criterio>("gisiabaseModel.FK_criteriocomparacion_alternativa", "criterio").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<criterio>("gisiabaseModel.FK_criteriocomparacion_alternativa", "criterio").Value = value;
            }
        }
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<criterio> criterioReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<criterio>("gisiabaseModel.FK_criteriocomparacion_alternativa", "criterio");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<criterio>("gisiabaseModel.FK_criteriocomparacion_alternativa", "criterio", value);
                }
            }
        }
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("gisiabaseModel", "FK_expertocomparacion_alternativa", "experto")]
        public experto experto
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<experto>("gisiabaseModel.FK_expertocomparacion_alternativa", "experto").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<experto>("gisiabaseModel.FK_expertocomparacion_alternativa", "experto").Value = value;
            }
        }
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<experto> expertoReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<experto>("gisiabaseModel.FK_expertocomparacion_alternativa", "experto");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<experto>("gisiabaseModel.FK_expertocomparacion_alternativa", "experto", value);
                }
            }
        }
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("gisiabaseModel", "FK_proyectocomparacion_alternativa", "proyecto")]
        public proyecto proyecto
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<proyecto>("gisiabaseModel.FK_proyectocomparacion_alternativa", "proyecto").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<proyecto>("gisiabaseModel.FK_proyectocomparacion_alternativa", "proyecto").Value = value;
            }
        }
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<proyecto> proyectoReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<proyecto>("gisiabaseModel.FK_proyectocomparacion_alternativa", "proyecto");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<proyecto>("gisiabaseModel.FK_proyectocomparacion_alternativa", "proyecto", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No hay documentación de metadatos disponible.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="gisiabaseModel", Name="comparacion_criterio")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class comparacion_criterio : EntityObject
    {
        #region Método de generador
    
        /// <summary>
        /// Crear un nuevo objeto comparacion_criterio.
        /// </summary>
        /// <param name="id_proyecto">Valor inicial de la propiedad id_proyecto.</param>
        /// <param name="id_experto">Valor inicial de la propiedad id_experto.</param>
        /// <param name="id_criterio1">Valor inicial de la propiedad id_criterio1.</param>
        /// <param name="id_criterio2">Valor inicial de la propiedad id_criterio2.</param>
        public static comparacion_criterio Createcomparacion_criterio(global::System.Int32 id_proyecto, global::System.Int32 id_experto, global::System.Int32 id_criterio1, global::System.Int32 id_criterio2)
        {
            comparacion_criterio comparacion_criterio = new comparacion_criterio();
            comparacion_criterio.id_proyecto = id_proyecto;
            comparacion_criterio.id_experto = id_experto;
            comparacion_criterio.id_criterio1 = id_criterio1;
            comparacion_criterio.id_criterio2 = id_criterio2;
            return comparacion_criterio;
        }

        #endregion
        #region Propiedades primitivas
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id_proyecto
        {
            get
            {
                return _id_proyecto;
            }
            set
            {
                if (_id_proyecto != value)
                {
                    Onid_proyectoChanging(value);
                    ReportPropertyChanging("id_proyecto");
                    _id_proyecto = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id_proyecto");
                    Onid_proyectoChanged();
                }
            }
        }
        private global::System.Int32 _id_proyecto;
        partial void Onid_proyectoChanging(global::System.Int32 value);
        partial void Onid_proyectoChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id_experto
        {
            get
            {
                return _id_experto;
            }
            set
            {
                if (_id_experto != value)
                {
                    Onid_expertoChanging(value);
                    ReportPropertyChanging("id_experto");
                    _id_experto = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id_experto");
                    Onid_expertoChanged();
                }
            }
        }
        private global::System.Int32 _id_experto;
        partial void Onid_expertoChanging(global::System.Int32 value);
        partial void Onid_expertoChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id_criterio1
        {
            get
            {
                return _id_criterio1;
            }
            set
            {
                if (_id_criterio1 != value)
                {
                    Onid_criterio1Changing(value);
                    ReportPropertyChanging("id_criterio1");
                    _id_criterio1 = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id_criterio1");
                    Onid_criterio1Changed();
                }
            }
        }
        private global::System.Int32 _id_criterio1;
        partial void Onid_criterio1Changing(global::System.Int32 value);
        partial void Onid_criterio1Changed();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id_criterio2
        {
            get
            {
                return _id_criterio2;
            }
            set
            {
                if (_id_criterio2 != value)
                {
                    Onid_criterio2Changing(value);
                    ReportPropertyChanging("id_criterio2");
                    _id_criterio2 = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id_criterio2");
                    Onid_criterio2Changed();
                }
            }
        }
        private global::System.Int32 _id_criterio2;
        partial void Onid_criterio2Changing(global::System.Int32 value);
        partial void Onid_criterio2Changed();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> valor
        {
            get
            {
                return _valor;
            }
            set
            {
                OnvalorChanging(value);
                ReportPropertyChanging("valor");
                _valor = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("valor");
                OnvalorChanged();
            }
        }
        private Nullable<global::System.Double> _valor;
        partial void OnvalorChanging(Nullable<global::System.Double> value);
        partial void OnvalorChanged();

        #endregion
    
        #region Propiedades de navegación
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("gisiabaseModel", "FK_criteriocomparacion_criterio", "criterio")]
        public criterio criterio
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<criterio>("gisiabaseModel.FK_criteriocomparacion_criterio", "criterio").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<criterio>("gisiabaseModel.FK_criteriocomparacion_criterio", "criterio").Value = value;
            }
        }
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<criterio> criterioReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<criterio>("gisiabaseModel.FK_criteriocomparacion_criterio", "criterio");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<criterio>("gisiabaseModel.FK_criteriocomparacion_criterio", "criterio", value);
                }
            }
        }
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("gisiabaseModel", "FK_criteriocomparacion_criterio1", "criterio")]
        public criterio criterio1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<criterio>("gisiabaseModel.FK_criteriocomparacion_criterio1", "criterio").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<criterio>("gisiabaseModel.FK_criteriocomparacion_criterio1", "criterio").Value = value;
            }
        }
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<criterio> criterio1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<criterio>("gisiabaseModel.FK_criteriocomparacion_criterio1", "criterio");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<criterio>("gisiabaseModel.FK_criteriocomparacion_criterio1", "criterio", value);
                }
            }
        }
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("gisiabaseModel", "FK_expertocomparacion_criterio", "experto")]
        public experto experto
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<experto>("gisiabaseModel.FK_expertocomparacion_criterio", "experto").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<experto>("gisiabaseModel.FK_expertocomparacion_criterio", "experto").Value = value;
            }
        }
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<experto> expertoReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<experto>("gisiabaseModel.FK_expertocomparacion_criterio", "experto");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<experto>("gisiabaseModel.FK_expertocomparacion_criterio", "experto", value);
                }
            }
        }
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("gisiabaseModel", "FK_proyectocomparacion_criterio", "proyecto")]
        public proyecto proyecto
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<proyecto>("gisiabaseModel.FK_proyectocomparacion_criterio", "proyecto").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<proyecto>("gisiabaseModel.FK_proyectocomparacion_criterio", "proyecto").Value = value;
            }
        }
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<proyecto> proyectoReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<proyecto>("gisiabaseModel.FK_proyectocomparacion_criterio", "proyecto");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<proyecto>("gisiabaseModel.FK_proyectocomparacion_criterio", "proyecto", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No hay documentación de metadatos disponible.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="gisiabaseModel", Name="criterio")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class criterio : EntityObject
    {
        #region Método de generador
    
        /// <summary>
        /// Crear un nuevo objeto criterio.
        /// </summary>
        /// <param name="id_criterio">Valor inicial de la propiedad id_criterio.</param>
        /// <param name="id_proyecto">Valor inicial de la propiedad id_proyecto.</param>
        /// <param name="nombre">Valor inicial de la propiedad nombre.</param>
        public static criterio Createcriterio(global::System.Int32 id_criterio, global::System.Int32 id_proyecto, global::System.String nombre)
        {
            criterio criterio = new criterio();
            criterio.id_criterio = id_criterio;
            criterio.id_proyecto = id_proyecto;
            criterio.nombre = nombre;
            return criterio;
        }

        #endregion
        #region Propiedades primitivas
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id_criterio
        {
            get
            {
                return _id_criterio;
            }
            set
            {
                if (_id_criterio != value)
                {
                    Onid_criterioChanging(value);
                    ReportPropertyChanging("id_criterio");
                    _id_criterio = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id_criterio");
                    Onid_criterioChanged();
                }
            }
        }
        private global::System.Int32 _id_criterio;
        partial void Onid_criterioChanging(global::System.Int32 value);
        partial void Onid_criterioChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id_proyecto
        {
            get
            {
                return _id_proyecto;
            }
            set
            {
                Onid_proyectoChanging(value);
                ReportPropertyChanging("id_proyecto");
                _id_proyecto = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("id_proyecto");
                Onid_proyectoChanged();
            }
        }
        private global::System.Int32 _id_proyecto;
        partial void Onid_proyectoChanging(global::System.Int32 value);
        partial void Onid_proyectoChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String nombre
        {
            get
            {
                return _nombre;
            }
            set
            {
                OnnombreChanging(value);
                ReportPropertyChanging("nombre");
                _nombre = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("nombre");
                OnnombreChanged();
            }
        }
        private global::System.String _nombre;
        partial void OnnombreChanging(global::System.String value);
        partial void OnnombreChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String descripcion
        {
            get
            {
                return _descripcion;
            }
            set
            {
                OndescripcionChanging(value);
                ReportPropertyChanging("descripcion");
                _descripcion = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("descripcion");
                OndescripcionChanged();
            }
        }
        private global::System.String _descripcion;
        partial void OndescripcionChanging(global::System.String value);
        partial void OndescripcionChanged();

        #endregion
    
        #region Propiedades de navegación
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("gisiabaseModel", "FK_criteriocomparacion_alternativa", "comparacion_alternativa")]
        public EntityCollection<comparacion_alternativa> comparacion_alternativa
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<comparacion_alternativa>("gisiabaseModel.FK_criteriocomparacion_alternativa", "comparacion_alternativa");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<comparacion_alternativa>("gisiabaseModel.FK_criteriocomparacion_alternativa", "comparacion_alternativa", value);
                }
            }
        }
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("gisiabaseModel", "FK_criteriocomparacion_criterio", "comparacion_criterio")]
        public EntityCollection<comparacion_criterio> comparacion_criterio
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<comparacion_criterio>("gisiabaseModel.FK_criteriocomparacion_criterio", "comparacion_criterio");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<comparacion_criterio>("gisiabaseModel.FK_criteriocomparacion_criterio", "comparacion_criterio", value);
                }
            }
        }
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("gisiabaseModel", "FK_criteriocomparacion_criterio1", "comparacion_criterio")]
        public EntityCollection<comparacion_criterio> comparacion_criterio1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<comparacion_criterio>("gisiabaseModel.FK_criteriocomparacion_criterio1", "comparacion_criterio");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<comparacion_criterio>("gisiabaseModel.FK_criteriocomparacion_criterio1", "comparacion_criterio", value);
                }
            }
        }
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("gisiabaseModel", "FK_proyectocriterio", "proyecto")]
        public proyecto proyecto
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<proyecto>("gisiabaseModel.FK_proyectocriterio", "proyecto").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<proyecto>("gisiabaseModel.FK_proyectocriterio", "proyecto").Value = value;
            }
        }
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<proyecto> proyectoReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<proyecto>("gisiabaseModel.FK_proyectocriterio", "proyecto");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<proyecto>("gisiabaseModel.FK_proyectocriterio", "proyecto", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No hay documentación de metadatos disponible.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="gisiabaseModel", Name="experto")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class experto : EntityObject
    {
        #region Método de generador
    
        /// <summary>
        /// Crear un nuevo objeto experto.
        /// </summary>
        /// <param name="id_experto">Valor inicial de la propiedad id_experto.</param>
        /// <param name="nombre">Valor inicial de la propiedad nombre.</param>
        /// <param name="apellido">Valor inicial de la propiedad apellido.</param>
        /// <param name="nom_usuario">Valor inicial de la propiedad nom_usuario.</param>
        /// <param name="clave">Valor inicial de la propiedad clave.</param>
        public static experto Createexperto(global::System.Int32 id_experto, global::System.String nombre, global::System.String apellido, global::System.String nom_usuario, global::System.String clave)
        {
            experto experto = new experto();
            experto.id_experto = id_experto;
            experto.nombre = nombre;
            experto.apellido = apellido;
            experto.nom_usuario = nom_usuario;
            experto.clave = clave;
            return experto;
        }

        #endregion
        #region Propiedades primitivas
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id_experto
        {
            get
            {
                return _id_experto;
            }
            set
            {
                if (_id_experto != value)
                {
                    Onid_expertoChanging(value);
                    ReportPropertyChanging("id_experto");
                    _id_experto = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id_experto");
                    Onid_expertoChanged();
                }
            }
        }
        private global::System.Int32 _id_experto;
        partial void Onid_expertoChanging(global::System.Int32 value);
        partial void Onid_expertoChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String nombre
        {
            get
            {
                return _nombre;
            }
            set
            {
                OnnombreChanging(value);
                ReportPropertyChanging("nombre");
                _nombre = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("nombre");
                OnnombreChanged();
            }
        }
        private global::System.String _nombre;
        partial void OnnombreChanging(global::System.String value);
        partial void OnnombreChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String apellido
        {
            get
            {
                return _apellido;
            }
            set
            {
                OnapellidoChanging(value);
                ReportPropertyChanging("apellido");
                _apellido = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("apellido");
                OnapellidoChanged();
            }
        }
        private global::System.String _apellido;
        partial void OnapellidoChanging(global::System.String value);
        partial void OnapellidoChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String nom_usuario
        {
            get
            {
                return _nom_usuario;
            }
            set
            {
                Onnom_usuarioChanging(value);
                ReportPropertyChanging("nom_usuario");
                _nom_usuario = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("nom_usuario");
                Onnom_usuarioChanged();
            }
        }
        private global::System.String _nom_usuario;
        partial void Onnom_usuarioChanging(global::System.String value);
        partial void Onnom_usuarioChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String clave
        {
            get
            {
                return _clave;
            }
            set
            {
                OnclaveChanging(value);
                ReportPropertyChanging("clave");
                _clave = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("clave");
                OnclaveChanged();
            }
        }
        private global::System.String _clave;
        partial void OnclaveChanging(global::System.String value);
        partial void OnclaveChanged();

        #endregion
    
        #region Propiedades de navegación
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("gisiabaseModel", "FK_expertocomparacion_alternativa", "comparacion_alternativa")]
        public EntityCollection<comparacion_alternativa> comparacion_alternativa
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<comparacion_alternativa>("gisiabaseModel.FK_expertocomparacion_alternativa", "comparacion_alternativa");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<comparacion_alternativa>("gisiabaseModel.FK_expertocomparacion_alternativa", "comparacion_alternativa", value);
                }
            }
        }
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("gisiabaseModel", "FK_expertocomparacion_criterio", "comparacion_criterio")]
        public EntityCollection<comparacion_criterio> comparacion_criterio
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<comparacion_criterio>("gisiabaseModel.FK_expertocomparacion_criterio", "comparacion_criterio");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<comparacion_criterio>("gisiabaseModel.FK_expertocomparacion_criterio", "comparacion_criterio", value);
                }
            }
        }
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("gisiabaseModel", "FK_expertoexperto_proyecto", "experto_proyecto")]
        public EntityCollection<experto_proyecto> experto_proyecto
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<experto_proyecto>("gisiabaseModel.FK_expertoexperto_proyecto", "experto_proyecto");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<experto_proyecto>("gisiabaseModel.FK_expertoexperto_proyecto", "experto_proyecto", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No hay documentación de metadatos disponible.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="gisiabaseModel", Name="experto_proyecto")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class experto_proyecto : EntityObject
    {
        #region Método de generador
    
        /// <summary>
        /// Crear un nuevo objeto experto_proyecto.
        /// </summary>
        /// <param name="id_proyecto">Valor inicial de la propiedad id_proyecto.</param>
        /// <param name="id_experto">Valor inicial de la propiedad id_experto.</param>
        public static experto_proyecto Createexperto_proyecto(global::System.Int32 id_proyecto, global::System.Int32 id_experto)
        {
            experto_proyecto experto_proyecto = new experto_proyecto();
            experto_proyecto.id_proyecto = id_proyecto;
            experto_proyecto.id_experto = id_experto;
            return experto_proyecto;
        }

        #endregion
        #region Propiedades primitivas
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id_proyecto
        {
            get
            {
                return _id_proyecto;
            }
            set
            {
                if (_id_proyecto != value)
                {
                    Onid_proyectoChanging(value);
                    ReportPropertyChanging("id_proyecto");
                    _id_proyecto = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id_proyecto");
                    Onid_proyectoChanged();
                }
            }
        }
        private global::System.Int32 _id_proyecto;
        partial void Onid_proyectoChanging(global::System.Int32 value);
        partial void Onid_proyectoChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id_experto
        {
            get
            {
                return _id_experto;
            }
            set
            {
                if (_id_experto != value)
                {
                    Onid_expertoChanging(value);
                    ReportPropertyChanging("id_experto");
                    _id_experto = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id_experto");
                    Onid_expertoChanged();
                }
            }
        }
        private global::System.Int32 _id_experto;
        partial void Onid_expertoChanging(global::System.Int32 value);
        partial void Onid_expertoChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> ponderacion
        {
            get
            {
                return _ponderacion;
            }
            set
            {
                OnponderacionChanging(value);
                ReportPropertyChanging("ponderacion");
                _ponderacion = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ponderacion");
                OnponderacionChanged();
            }
        }
        private Nullable<global::System.Double> _ponderacion;
        partial void OnponderacionChanging(Nullable<global::System.Double> value);
        partial void OnponderacionChanged();

        #endregion
    
        #region Propiedades de navegación
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("gisiabaseModel", "FK_expertoexperto_proyecto", "experto")]
        public experto experto
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<experto>("gisiabaseModel.FK_expertoexperto_proyecto", "experto").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<experto>("gisiabaseModel.FK_expertoexperto_proyecto", "experto").Value = value;
            }
        }
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<experto> expertoReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<experto>("gisiabaseModel.FK_expertoexperto_proyecto", "experto");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<experto>("gisiabaseModel.FK_expertoexperto_proyecto", "experto", value);
                }
            }
        }
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("gisiabaseModel", "FK_proyectoexperto_proyecto", "proyecto")]
        public proyecto proyecto
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<proyecto>("gisiabaseModel.FK_proyectoexperto_proyecto", "proyecto").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<proyecto>("gisiabaseModel.FK_proyectoexperto_proyecto", "proyecto").Value = value;
            }
        }
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<proyecto> proyectoReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<proyecto>("gisiabaseModel.FK_proyectoexperto_proyecto", "proyecto");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<proyecto>("gisiabaseModel.FK_proyectoexperto_proyecto", "proyecto", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No hay documentación de metadatos disponible.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="gisiabaseModel", Name="proyecto")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class proyecto : EntityObject
    {
        #region Método de generador
    
        /// <summary>
        /// Crear un nuevo objeto proyecto.
        /// </summary>
        /// <param name="id_proyecto">Valor inicial de la propiedad id_proyecto.</param>
        /// <param name="nombre">Valor inicial de la propiedad nombre.</param>
        public static proyecto Createproyecto(global::System.Int32 id_proyecto, global::System.String nombre)
        {
            proyecto proyecto = new proyecto();
            proyecto.id_proyecto = id_proyecto;
            proyecto.nombre = nombre;
            return proyecto;
        }

        #endregion
        #region Propiedades primitivas
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id_proyecto
        {
            get
            {
                return _id_proyecto;
            }
            set
            {
                if (_id_proyecto != value)
                {
                    Onid_proyectoChanging(value);
                    ReportPropertyChanging("id_proyecto");
                    _id_proyecto = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id_proyecto");
                    Onid_proyectoChanged();
                }
            }
        }
        private global::System.Int32 _id_proyecto;
        partial void Onid_proyectoChanging(global::System.Int32 value);
        partial void Onid_proyectoChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String nombre
        {
            get
            {
                return _nombre;
            }
            set
            {
                OnnombreChanging(value);
                ReportPropertyChanging("nombre");
                _nombre = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("nombre");
                OnnombreChanged();
            }
        }
        private global::System.String _nombre;
        partial void OnnombreChanging(global::System.String value);
        partial void OnnombreChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String objetivo
        {
            get
            {
                return _objetivo;
            }
            set
            {
                OnobjetivoChanging(value);
                ReportPropertyChanging("objetivo");
                _objetivo = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("objetivo");
                OnobjetivoChanged();
            }
        }
        private global::System.String _objetivo;
        partial void OnobjetivoChanging(global::System.String value);
        partial void OnobjetivoChanged();

        #endregion
    
        #region Propiedades de navegación
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("gisiabaseModel", "FK_proyectoalternativa", "alternativa")]
        public EntityCollection<alternativa> alternativas
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<alternativa>("gisiabaseModel.FK_proyectoalternativa", "alternativa");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<alternativa>("gisiabaseModel.FK_proyectoalternativa", "alternativa", value);
                }
            }
        }
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("gisiabaseModel", "FK_proyectocomparacion_alternativa", "comparacion_alternativa")]
        public EntityCollection<comparacion_alternativa> comparacion_alternativa
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<comparacion_alternativa>("gisiabaseModel.FK_proyectocomparacion_alternativa", "comparacion_alternativa");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<comparacion_alternativa>("gisiabaseModel.FK_proyectocomparacion_alternativa", "comparacion_alternativa", value);
                }
            }
        }
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("gisiabaseModel", "FK_proyectocomparacion_criterio", "comparacion_criterio")]
        public EntityCollection<comparacion_criterio> comparacion_criterio
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<comparacion_criterio>("gisiabaseModel.FK_proyectocomparacion_criterio", "comparacion_criterio");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<comparacion_criterio>("gisiabaseModel.FK_proyectocomparacion_criterio", "comparacion_criterio", value);
                }
            }
        }
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("gisiabaseModel", "FK_proyectocriterio", "criterio")]
        public EntityCollection<criterio> criterios
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<criterio>("gisiabaseModel.FK_proyectocriterio", "criterio");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<criterio>("gisiabaseModel.FK_proyectocriterio", "criterio", value);
                }
            }
        }
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("gisiabaseModel", "FK_proyectoexperto_proyecto", "experto_proyecto")]
        public EntityCollection<experto_proyecto> experto_proyecto
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<experto_proyecto>("gisiabaseModel.FK_proyectoexperto_proyecto", "experto_proyecto");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<experto_proyecto>("gisiabaseModel.FK_proyectoexperto_proyecto", "experto_proyecto", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
